import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import ContentType, InlineKeyboardButton, InlineKeyboardMarkup
from gtts import gTTS
import os

API_TOKEN = 'YOUR TOKEN'
logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

async def on_startup(dp):
    logging.warning('Startup__________________________________________________________')
    await bot.send_message(chat_id=5876950154, text='Бот начал свою работу!')

async def on_shutdown(dp):
    logging.warning('Shutting down...')
    await bot.send_message(chat_id=5876950154, text='Bot has been stopped')
    logging.warning('Bye!')

async def text_to_speech(text, chat_id, lang):
    audio = gTTS(text=text, lang="ru", slow=False)  
    audio_file_path = "output.mp3"
    audio.save(audio_file_path)

    with open(audio_file_path, 'rb') as audio_file:
        await bot.send_audio(chat_id=chat_id, audio=audio_file)

    os.remove(audio_file_path)

@dp.message_handler(commands=['start'])
async def cmd_start(message: types.Message):
    await message.answer("Привет! Я бот, который может преобразовывать текст в речь. \n                    Отправь мне любой текст и я его озвучу")

@dp.message_handler(commands=['help'])
async def cmd_start(message: types.Message):
    await message.answer("Возникла проблема? Пиши в \n---------@VladimirLen1n---------")

@dp.message_handler(content_types=ContentType.TEXT)
async def handle_text(message: types.Message):
    text = message.text
    chat_id = message.chat.id

    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(text="Английская озвучка", callback_data='en'))
    keyboard.add(InlineKeyboardButton(text="Русская озвучка", callback_data='ru'))

    await bot.send_message(chat_id, f"Выберите язык озвучивания:\n\n{text}", reply_markup=keyboard)

@dp.callback_query_handler(lambda query: query.data in ['en', 'ru'])
async def process_callback(callback_query: types.CallbackQuery):
    lang = callback_query.data
    text = callback_query.message.text.split("\n", 1)[-1]  
    chat_id = callback_query.message.chat.id

    await bot.send_message(chat_id, f"Выбран язык: {lang}")
    await text_to_speech(text, chat_id, lang)

if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.create_task(on_startup(dp))
    try:
        loop.run_until_complete(dp.skip_updates())
        loop.run_until_complete(dp.start_polling())
    finally:
        loop.run_until_complete(on_shutdown(dp))
        loop.close()
